module Nat where
import Bool

--{ Features: datatypes:inductive }
data Nat : Type :=
  Z : Nat
  S : Nat -> Nat

--{ Features: matching }
isZero : Nat -> Bool
isZero = \n . case n of
  Z -> True
  S n' -> False

--{ Features: matching, recursive }
plus : Nat -> Nat -> Nat
plus = \n m . case n of
  Z -> m
  S n' -> S (plus n' m)