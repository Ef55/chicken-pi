module HList where

import List

data HList: List Set -> Type 1 :=
  HNil : HList (Nil Set)
  HCons (T: Set) (T) (Ts: List Set) (HList Ts): HList (Cons Set T Ts)

hconcat :
  (Ls: List Set) -> (Rs: List Set) ->
  (l: HList Ls) -> (r: HList Rs) -> 
  HList (concat Set Ls Rs)
hconcat = fix hconcat Ls Rs [l] . \r . case l in HList Ls_ return HList (concat Set Ls_ Rs) of
  HNil -> r
  HCons HL hl Ls' l' -> HCons HL hl (concat Set Ls' Rs) (hconcat Ls' Rs l' r)